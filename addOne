class Solution {
    public Node addOne(Node head) {
        head = reverse(head);  // Step 1: Reverse the list
        Node curr = head;
        int carry = 1;  // Since we want to add one

        while (curr != null) {
            int sum = curr.data + carry;
            curr.data = sum % 10;
            carry = sum / 10;
            if (carry == 0) break;
            if (curr.next == null && carry > 0) {
                curr.next = new Node(0);
            }
            curr = curr.next;
        }

        return reverse(head); // Step 3: Reverse it back
    }

    private Node reverse(Node head) {
        Node prev = null;
        Node curr = head;
        while (curr != null) {
            Node next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
