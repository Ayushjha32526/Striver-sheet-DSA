public ArrayList<Integer> bfs(ArrayList<ArrayList<Integer>> adj) {
    int v = adj.size();  
    ArrayList<Integer> bfs = new ArrayList<>();
    Queue<Integer> queue = new LinkedList<>();
    boolean[] visited = new boolean[v];

    queue.add(0);
    visited[0] = true;

    while (!queue.isEmpty()) {
        int curr = queue.poll();
        bfs.add(curr);

        List<Integer> neighbour = adj.get(curr);
        for (int i = 0; i < neighbour.size(); i++) {
            int neig = neighbour.get(i);
            if (!visited[neig]) {
                queue.add(neig);
                visited[neig] = true;
            }
        }
    }

    return bfs;
}
