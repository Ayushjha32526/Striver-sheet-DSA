class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        int[] result = new int[n1];
        
        Stack<Integer> stack = new Stack<>();
        Map<Integer, Integer> nextGreaterMap = new HashMap<>();
        
        // Build the next greater element map for nums2
        for(int i = 0; i < n2; i++){
            // While stack is not empty and current element is greater than stack top
            while(!stack.isEmpty() && nums2[i] > stack.peek()){
                nextGreaterMap.put(stack.pop(), nums2[i]);
            }
            stack.push(nums2[i]);
        }
        
        // Fill the result array for nums1
        for(int i = 0; i < n1; i++){
            result[i] = nextGreaterMap.getOrDefault(nums1[i], -1);
        }
        
        return result;
    }
}
