import java.util.Arrays;

class Solution {
    public int longestConsecutive(int[] arr) {
        if (arr.length == 0) {
            return 0; // Handle empty array case
        }
        
        Arrays.sort(arr); // Sort the array to find consecutive numbers

        int longest = 1;  // Initialize longest sequence to at least 1
        int current = 1;  // Start current sequence length as 1

        // Traverse the array
        for (int i = 1; i < arr.length; i++) {
            // If the current number is the same as the previous, skip it (duplicates)
            if (arr[i] == arr[i - 1]) {
                continue;
            }

            // If current number is consecutive, increment the current sequence
            if (arr[i] == arr[i - 1] + 1) {
                current++;
            } else {
                // Otherwise, update the longest sequence and reset current sequence
                longest = Math.max(longest, current);
                current = 1; // Reset current sequence to 1
            }
        }

        // After the loop, update the longest sequence one last time
        return Math.max(longest, current);
    }
}
