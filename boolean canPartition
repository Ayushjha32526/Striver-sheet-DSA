class Solution {
    public boolean canPartition(int[] nums) {
        int sum=0;
      for(int i=0;i<nums.length;i++){
        sum = sum + nums[i];
      }  
      if(sum%2!=0){
        return false;
      }
    int target = sum/2;
    return part(nums,target);
      
    }
    public boolean part(int[] arr ,   int target){
     int n = arr.length;
     boolean [][] dp = new boolean[n+1][target+1];
     for(int i=0;i<n;i++){
        dp[i][0]= true;
     }
     for(int j=1;j<target;j++){
        dp[0][j]= false;
     }

     for(int i=1;i<n;i++){
        for(int j=1;j<target;j++){
            if(arr[i-1]<=j){
                dp[i][j]= dp[i-1][j] | dp[i-1][j-arr[i-1]];
            }else{
                dp[i][j]= dp[i-1][j];
            }
        }
     }
     return dp[n][target];

    }
}
