class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if (root == null) return res;

        Deque<TreeNode> queue = new ArrayDeque<>();
        queue.offer(root);
        int index = 0;

        while (!queue.isEmpty()) {
            int size = queue.size();
            List<Integer> arr = new ArrayList<>();

            for (int i = 0; i < size; i++) {
                if (index % 2 == 0) {
                    TreeNode node = queue.pollFirst();
                    arr.add(node.val);
                    if (node.left != null) queue.offerLast(node.left);
                    if (node.right != null) queue.offerLast(node.right);
                } else {
                    TreeNode node = queue.pollLast();
                    arr.add(node.val);
                    if (node.right != null) queue.offerFirst(node.right);
                    if (node.left != null) queue.offerFirst(node.left);
                }
            }

            res.add(arr);
            index++;
        }

        return res;
    }
}
