import java.util.PriorityQueue;

class Solution {

    public int findKthLargest(int[] nums, int k) {
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        int val = 0;

        // Build a min-heap of size k
        for (int i = 0; i < nums.length; i++) {
            pq.offer(nums[i]);
            if (pq.size() > k) {
                pq.poll(); // Remove the smallest to keep size at k
            }
        }

        // The top of the heap is the Kth largest
        if (!pq.isEmpty()) {
            val = pq.peek();
        }

        return val;
    }
}
