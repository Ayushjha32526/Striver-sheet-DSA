class Solution {
    // Function to check whether all nodes of a tree have the value
    // equal to the sum of their child nodes.
    public static int isSumProperty(Node root) {
        // add your code here
        if(root==null){
            return 1; // Changed: null should return 1 (true), not 0
        }
        
        // Leaf nodes always satisfy the property
        if(root.left==null && root.right==null){
            return 1; // Changed: leaf nodes should return 1, not calculate sum
        }
        
        // For internal nodes, check sum property
        int leftValue = 0, rightValue = 0;
        
        // Get actual child values, not recursive results
        if(root.left != null) {
            leftValue = root.left.data;
        }
        if(root.right != null) {
            rightValue = root.right.data;
        }
        
        // Check if current node satisfies sum property
        if(root.data != leftValue + rightValue) {
            return 0;
        }
        
        // Now recursively check subtrees
        int left = isSumProperty(root.left);
        int right = isSumProperty(root.right);
        
        // Return 1 only if both subtrees satisfy the property
        return (left == 1 && right == 1) ? 1 : 0;
    }
}
